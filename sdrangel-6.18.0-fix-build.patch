diff -up sdrangel-6.18.0/build/^.omv~ sdrangel-6.18.0/build/^
diff -up sdrangel-6.18.0/plugins/channelrx/demoddatv/leansdr/sdr.h.omv~ sdrangel-6.18.0/plugins/channelrx/demoddatv/leansdr/sdr.h
--- sdrangel-6.18.0/plugins/channelrx/demoddatv/leansdr/sdr.h.omv~	2022-01-09 19:28:30.023271274 +0100
+++ sdrangel-6.18.0/plugins/channelrx/demoddatv/leansdr/sdr.h	2022-01-09 19:31:33.934045913 +0100
@@ -416,8 +416,8 @@ struct simple_agc : runnable
 
             for (; pin < pend; ++pin, ++pout)
             {
-                pout->real() = pin->real() * gain;
-                pout->imag() = pin->imag() * gain;
+                pout->real(pin->real() * gain);
+                pout->imag(pin->imag() * gain);
             }
 
             in.read(chunk_size);
@@ -1580,8 +1580,8 @@ struct fast_qpsk_receiver : runnable
                     std::complex<float>
                         p1r(((float)pin[1].real() - 128) * cosa1 - ((float)pin[1].imag() - 128) * sina1,
                             ((float)pin[1].real() - 128) * sina1 + ((float)pin[1].imag() - 128) * cosa1);
-                    s.real() = (int)(128 + p0r.real() + (p1r.real() - p0r.real()) * mu);
-                    s.imag() = (int)(128 + p0r.imag() + (p1r.imag() - p0r.imag()) * mu);
+                    s.real((int)(128 + p0r.real() + (p1r.real() - p0r.real()) * mu));
+                    s.imag((int)(128 + p0r.imag() + (p1r.imag() - p0r.imag()) * mu));
                     symbol_arg = fast_arg(s);
 #endif
 
@@ -1604,12 +1604,12 @@ struct fast_qpsk_receiver : runnable
                     hist[1] = hist[0];
 #define HIST_FLOAT 0
 #if HIST_FLOAT
-                    hist[0].p.real() = (float)s.real() - 128;
-                    hist[0].p.imag() = (float)s.imag() - 128;
+                    hist[0].p.real((float)s.real() - 128);
+                    hist[0].p.imag((float)s.imag() - 128);
 
                     cu8 cp = arg_to_symbol((symbol_arg & 49152) + 8192);
-                    hist[0].c.real() = (float)cp.real() - 128;
-                    hist[0].c.imag() = (float)cp.imag() - 128;
+                    hist[0].c.real((float)cp.real() - 128);
+                    hist[0].c.imag((float)cp.imag() - 128);
 
                     float muerr =
                         ((hist[0].p.real() - hist[2].p.real()) * hist[1].c.real() +
@@ -1715,16 +1715,16 @@ struct fast_qpsk_receiver : runnable
         for (unsigned long a = 0; a < 65536; ++a)
         {
             float f = 2 * M_PI * a / 65536;
-            lut_sincos[a].real() = 128 + cstln_amp * cosf(f);
-            lut_sincos[a].imag() = 128 + cstln_amp * sinf(f);
+            lut_sincos[a].real(128 + cstln_amp * cosf(f));
+            lut_sincos[a].imag(128 + cstln_amp * sinf(f));
         }
 
         for (int a = 0; a < RLUT_ANGLES; ++a)
         {
             for (int r = 0; r < 256; ++r)
             {
-                lut_rect[a][r].real() = (int)(128 + r * cos(2 * M_PI * a / RLUT_ANGLES));
-                lut_rect[a][r].imag() = (int)(128 + r * sin(2 * M_PI * a / RLUT_ANGLES));
+                lut_rect[a][r].real((int)(128 + r * cos(2 * M_PI * a / RLUT_ANGLES)));
+                lut_rect[a][r].imag((int)(128 + r * sin(2 * M_PI * a / RLUT_ANGLES)));
             }
         }
     }
